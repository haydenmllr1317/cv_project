
Unet & CLIP:
    Model code:
        ./models/UNet.py
        ./models/CLIP_Segmenter.py

    Training Scripts (with same defaults as report):
        ./trainUNet.py
        ./trainCLIP.py

    Eval script:
        evaluateModel.py

Auto-Encoder:
    ./models/AutoEnc.py
    self_supervised_autoencoder.py
    pet_classification_decoder.py
    binary_pet_segmentation_decoder.py

Prompt-Based Clip Segmentation:
    ./prompt_segmentation_CLIP.py
    ./test_prompt_segmentation_CLIP.py
    ./prompt_based_customDataset.py

-------------------------------------------------------------------


The code for the perturbations is in:
    ./perturbUtil.py

The code for evaluating perturbation resilience:
    ./perturbEval.py

The code for the metrics requested is in:
    ./evalUtil.py

Lastly:
    ./customDataset.py
        The code for data loading and data augmentations.
    ./graphUtil.py
        A script used to make the graphs in the report and during training.
    ./util.py
        Small collection of usefull functions/things we needed.

-------------------------------------------------------------------



If you need to run the code:
1) Make sure to extract the "TrainVal" and "Test" folders from the dataset into:
    ./Dataset
2) Make and activate a virtual enviroment:
    python -m venv .venv
    source .venv/bin/activate
3) Install dependencies:
    pip install -r requirements.txt

We used python 3.12.3, though 3.10-3.11 likely also work.
Training requires at least 5gb vram (maybe bit less),
    and should take less than an hour for each model on a decent system.
Outputs will be saved in a ./Runs folder.
